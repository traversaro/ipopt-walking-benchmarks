# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This install mumps, ipopt via coindbrew and casadi, bipedal-locomotion-framework via robotology-superbuild
  build-conda-coinbrew:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04
    
    steps:
    - uses: conda-incubator/setup-miniconda@v2
      with:
        mamba-version: "*"
        channels: conda-forge,defaults
        channel-priority: true

    - name: Dependencies
      shell: bash -l {0}
      run: |
        mamba install cmake compilers make ninja pkg-config ace asio boost eigen gazebo glew glfw gsl libjpeg-turbo libmatio libode libxml2 opencv pkg-config portaudio qt sdl sdl2 sqlite tinyxml spdlog expat-cos6-x86_64 freeglut libdc1394 libselinux-cos6-x86_64 libxau-cos6-x86_64 libxcb-cos6-x86_64 libxdamage-cos6-x86_64 libxext-cos6-x86_64 libxfixes-cos6-x86_64 libxxf86vm-cos6-x86_64 mesalib mesa-libgl-cos6-x86_64
        
    - name: Coinbrew
      shell: bash -l {0}
      run: |
        mkdir CoinIpopt 
        cd CoinIpopt
        wget https://raw.githubusercontent.com/coin-or/coinbrew/master/coinbrew
        chmod u+x coinbrew
        ./coinbrew build Ipopt --prefix=install --test --no-prompt --verbosity=3
        ./coinbrew install Ipopt --no-prompt

    - name: Install blf via robotology-superbuild
      shell: bash -l {0}
      run: |
        export IPOPT_DIR=${GITHUB_WORKSPACE}/CoinIpopt/install
        export PKG_CONFIG_PATH=${PKG_CONFIG_PATH}:${IPOPT_DIR}/lib/pkgconfig
        export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${IPOPT_DIR}/lib
        export PATH=${PATH}:${IPOPT_DIR}/lib
        git clone https://github.com/robotology/robotology-superbuild
        cd robotology-superbuild
        mkdir build
        cd build
        cmake -DCMAKE_BUILD_TYPE=Release -GNinja -DNON_INTERACTIVE_BUILD:BOOL=ON -DROBOTOLOGY_PROJECT_TAGS:STRING=Unstable -DROBOTOLOGY_USES_GAZEBO:BOOL=OFF -DROBOTOLOGY_ENABLE_DYNAMICS:BOOL=ON -DROBOTOLOGY_ENABLE_DYNAMICS_FULL_DEPS:BOOL=ON ..
        cmake --build . --target bipedal-locomotion-framework
        cd src/bipedal-locomotion-framework
        cmake -DBUILD_TESTING=ON .
        cmake --build . --target TimeVaryingDCMPlanner
        ctest -R TimeVaryingDCMPlannerUnitTests

  # This install mumps, ipopt via conda-forge and casadi, bipedal-locomotion-framework via robotology-superbuild
  build-conda-pure:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - uses: conda-incubator/setup-miniconda@v2
      with:
        mamba-version: "*"
        channels: conda-forge,defaults
        channel-priority: true

    - name: Dependencies
      shell: bash -l {0}
      run: |
        mamba install cmake compilers make ninja pkg-config ace asio boost eigen gazebo glew glfw gsl ipopt libjpeg-turbo libmatio libode libxml2 opencv pkg-config portaudio qt sdl sdl2 sqlite tinyxml spdlog expat-cos6-x86_64 freeglut libdc1394 libselinux-cos6-x86_64 libxau-cos6-x86_64 libxcb-cos6-x86_64 libxdamage-cos6-x86_64 libxext-cos6-x86_64 libxfixes-cos6-x86_64 libxxf86vm-cos6-x86_64 mesalib mesa-libgl-cos6-x86_64
        
    - name: Install blf via robotology-superbuild
      shell: bash -l {0}
      run: |
        git clone https://github.com/robotology/robotology-superbuild
        cd robotology-superbuild
        mkdir build
        cd build
        cmake -DCMAKE_BUILD_TYPE=Release -GNinja -DNON_INTERACTIVE_BUILD:BOOL=ON -DROBOTOLOGY_PROJECT_TAGS:STRING=Unstable -DROBOTOLOGY_USES_GAZEBO:BOOL=OFF -DROBOTOLOGY_ENABLE_DYNAMICS:BOOL=ON -DROBOTOLOGY_ENABLE_DYNAMICS_FULL_DEPS:BOOL=ON ..
        cmake --build . --target bipedal-locomotion-framework
        cd src/bipedal-locomotion-framework
        cmake -DBUILD_TESTING=ON .
        cmake --build . --target TimeVaryingDCMPlanner
        ctest -R TimeVaryingDCMPlannerUnitTests
        
  # This install mumps, ipopt via coindbrew and casadi, bipedal-locomotion-framework via robotology-superbuild
  build-apt-coinbrew:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04
    
    steps:
    - name: Dependencies (without ipopt)
      run: |
        sudo apt-get install -y ninja-build build-essential pkg-config cmake cmake-curses-gui freeglut3-dev git libace-dev libboost-filesystem-dev libboost-system-dev libboost-thread-dev libdc1394-22-dev libedit-dev libeigen3-dev libgsl0-dev libjpeg-dev liblua5.1-dev libode-dev libopencv-dev libsdl1.2-dev libtinyxml-dev libv4l-dev libxml2-dev lua5.1 portaudio19-dev qml-module-qt-labs-folderlistmodel qml-module-qt-labs-settings qml-module-qtmultimedia qml-module-qtquick-controls qml-module-qtquick-dialogs qml-module-qtquick-window2 qml-module-qtquick2 qtbase5-dev qtdeclarative5-dev qtmultimedia5-dev swig libspdlog-dev libmatio-dev libirrlicht-dev

    - name: Coinbrew
      run: |
        mkdir CoinIpopt 
        cd CoinIpopt
        wget https://raw.githubusercontent.com/coin-or/coinbrew/master/coinbrew
        chmod u+x coinbrew
        ./coinbrew build Ipopt --prefix=install --test --no-prompt --verbosity=3
        ./coinbrew install Ipopt --no-prompt

    - name: Install blf via robotology-superbuild
      run: |
        export IPOPT_DIR=${GITHUB_WORKSPACE}/CoinIpopt/install
        export PKG_CONFIG_PATH=${PKG_CONFIG_PATH}:${IPOPT_DIR}/lib/pkgconfig
        export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${IPOPT_DIR}/lib
        export PATH=${PATH}:${IPOPT_DIR}/lib
        git clone https://github.com/robotology/robotology-superbuild
        cd robotology-superbuild
        mkdir build
        cd build
        cmake -DCMAKE_BUILD_TYPE=Release -GNinja -DNON_INTERACTIVE_BUILD:BOOL=ON -DROBOTOLOGY_PROJECT_TAGS:STRING=Unstable -DROBOTOLOGY_USES_GAZEBO:BOOL=OFF -DROBOTOLOGY_ENABLE_DYNAMICS:BOOL=ON -DROBOTOLOGY_ENABLE_DYNAMICS_FULL_DEPS:BOOL=ON ..
        cmake --build . --target bipedal-locomotion-framework
        cd src/bipedal-locomotion-framework
        cmake -DBUILD_TESTING=ON .
        cmake --build . --target TimeVaryingDCMPlanner
        ctest -R TimeVaryingDCMPlannerUnitTests
        
        
  # This install mumps, ipopt via apt and casadi, bipedal-locomotion-framework via robotology-superbuild
  build-apt-pure:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04
    
    steps:
    - name: Dependencies
      run: |
        sudo apt-get install -y ninja-build build-essential pkg-config cmake cmake-curses-gui coinor-libipopt-dev freeglut3-dev git libace-dev libboost-filesystem-dev libboost-system-dev libboost-thread-dev libdc1394-22-dev libedit-dev libeigen3-dev libgsl0-dev libjpeg-dev liblua5.1-dev libode-dev libopencv-dev libsdl1.2-dev libtinyxml-dev libv4l-dev libxml2-dev lua5.1 portaudio19-dev qml-module-qt-labs-folderlistmodel qml-module-qt-labs-settings qml-module-qtmultimedia qml-module-qtquick-controls qml-module-qtquick-dialogs qml-module-qtquick-window2 qml-module-qtquick2 qtbase5-dev qtdeclarative5-dev qtmultimedia5-dev swig libspdlog-dev libmatio-dev libirrlicht-dev

    - name: Install blf via robotology-superbuild
      run: |
        git clone https://github.com/robotology/robotology-superbuild
        cd robotology-superbuild
        mkdir build
        cd build
        cmake -DCMAKE_BUILD_TYPE=Release -GNinja -DNON_INTERACTIVE_BUILD:BOOL=ON  -DROBOTOLOGY_PROJECT_TAGS:STRING=Unstable -DROBOTOLOGY_USES_GAZEBO:BOOL=OFF -DROBOTOLOGY_ENABLE_DYNAMICS:BOOL=ON -DROBOTOLOGY_ENABLE_DYNAMICS_FULL_DEPS:BOOL=ON ..
        cmake --build . --target bipedal-locomotion-framework
        cd src/bipedal-locomotion-framework
        cmake -DBUILD_TESTING=ON .
        cmake --build . --target TimeVaryingDCMPlanner
        ctest -R TimeVaryingDCMPlannerUnitTests
